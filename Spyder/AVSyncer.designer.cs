#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.296
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Spyder
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AVSyncer")]
	public partial class AVSyncerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    partial void InsertActress(Actress instance);
    partial void UpdateActress(Actress instance);
    partial void DeleteActress(Actress instance);
    partial void InsertMovie(Movie instance);
    partial void UpdateMovie(Movie instance);
    partial void DeleteMovie(Movie instance);
    partial void InsertActressMovie(ActressMovie instance);
    partial void UpdateActressMovie(ActressMovie instance);
    partial void DeleteActressMovie(ActressMovie instance);
    partial void InsertLabel(Label instance);
    partial void UpdateLabel(Label instance);
    partial void DeleteLabel(Label instance);
    partial void InsertMaker(Maker instance);
    partial void UpdateMaker(Maker instance);
    partial void DeleteMaker(Maker instance);
    partial void InsertSeries(Series instance);
    partial void UpdateSeries(Series instance);
    partial void DeleteSeries(Series instance);
    #endregion
		
		public AVSyncerDataContext() : 
				base(global::Spyder.Properties.Settings.Default.AVSyncerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AVSyncerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AVSyncerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AVSyncerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AVSyncerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Actress> Actress
		{
			get
			{
				return this.GetTable<Actress>();
			}
		}
		
		public System.Data.Linq.Table<Movie> Movie
		{
			get
			{
				return this.GetTable<Movie>();
			}
		}
		
		public System.Data.Linq.Table<ActressMovie> ActressMovie
		{
			get
			{
				return this.GetTable<ActressMovie>();
			}
		}
		
		public System.Data.Linq.Table<Label> Label
		{
			get
			{
				return this.GetTable<Label>();
			}
		}
		
		public System.Data.Linq.Table<Maker> Maker
		{
			get
			{
				return this.GetTable<Maker>();
			}
		}
		
		public System.Data.Linq.Table<Series> Series
		{
			get
			{
				return this.GetTable<Series>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Actress")]
	public partial class Actress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<ActressMovie> _ActressMovie;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Actress()
		{
			this._ActressMovie = new EntitySet<ActressMovie>(new Action<ActressMovie>(this.attach_ActressMovie), new Action<ActressMovie>(this.detach_ActressMovie));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actress_ActressMovie", Storage="_ActressMovie", ThisKey="id", OtherKey="actressId")]
		public EntitySet<ActressMovie> ActressMovie
		{
			get
			{
				return this._ActressMovie;
			}
			set
			{
				this._ActressMovie.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActressMovie(ActressMovie entity)
		{
			this.SendPropertyChanging();
			entity.Actress = this;
		}
		
		private void detach_ActressMovie(ActressMovie entity)
		{
			this.SendPropertyChanging();
			entity.Actress = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Movie")]
	public partial class Movie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _mvid;
		
		private string _title;
		
		private int _maker_id;
		
		private int _label_id;
		
		private System.Nullable<int> _series_id;
		
		private double _rating;
		
		private string _cid;
		
		private System.DateTime _publishDate;
		
		private System.DateTime _releaseDate;
		
		private string _pageHref;
		
		private string _coverHref;
		
		private string _thumbnail;
		
		private EntitySet<ActressMovie> _ActressMovie;
		
		private EntityRef<Label> _Label;
		
		private EntityRef<Maker> _Maker;
		
		private EntityRef<Series> _Series;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmvidChanging(string value);
    partial void OnmvidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onmaker_idChanging(int value);
    partial void Onmaker_idChanged();
    partial void Onlabel_idChanging(int value);
    partial void Onlabel_idChanged();
    partial void Onseries_idChanging(System.Nullable<int> value);
    partial void Onseries_idChanged();
    partial void OnratingChanging(double value);
    partial void OnratingChanged();
    partial void OncidChanging(string value);
    partial void OncidChanged();
    partial void OnpublishDateChanging(System.DateTime value);
    partial void OnpublishDateChanged();
    partial void OnreleaseDateChanging(System.DateTime value);
    partial void OnreleaseDateChanged();
    partial void OnpageHrefChanging(string value);
    partial void OnpageHrefChanged();
    partial void OncoverHrefChanging(string value);
    partial void OncoverHrefChanged();
    partial void OnthumbnailChanging(string value);
    partial void OnthumbnailChanged();
    #endregion
		
		public Movie()
		{
			this._ActressMovie = new EntitySet<ActressMovie>(new Action<ActressMovie>(this.attach_ActressMovie), new Action<ActressMovie>(this.detach_ActressMovie));
			this._Label = default(EntityRef<Label>);
			this._Maker = default(EntityRef<Maker>);
			this._Series = default(EntityRef<Series>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mvid", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string mvid
		{
			get
			{
				return this._mvid;
			}
			set
			{
				if ((this._mvid != value))
				{
					this.OnmvidChanging(value);
					this.SendPropertyChanging();
					this._mvid = value;
					this.SendPropertyChanged("mvid");
					this.OnmvidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maker_id", DbType="Int NOT NULL")]
		public int maker_id
		{
			get
			{
				return this._maker_id;
			}
			set
			{
				if ((this._maker_id != value))
				{
					if (this._Maker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmaker_idChanging(value);
					this.SendPropertyChanging();
					this._maker_id = value;
					this.SendPropertyChanged("maker_id");
					this.Onmaker_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_label_id", DbType="Int NOT NULL")]
		public int label_id
		{
			get
			{
				return this._label_id;
			}
			set
			{
				if ((this._label_id != value))
				{
					if (this._Label.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlabel_idChanging(value);
					this.SendPropertyChanging();
					this._label_id = value;
					this.SendPropertyChanged("label_id");
					this.Onlabel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_series_id", DbType="Int")]
		public System.Nullable<int> series_id
		{
			get
			{
				return this._series_id;
			}
			set
			{
				if ((this._series_id != value))
				{
					if (this._Series.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseries_idChanging(value);
					this.SendPropertyChanging();
					this._series_id = value;
					this.SendPropertyChanged("series_id");
					this.Onseries_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating", DbType="Float NOT NULL")]
		public double rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if ((this._rating != value))
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", DbType="VarChar(64)")]
		public string cid
		{
			get
			{
				return this._cid;
			}
			set
			{
				if ((this._cid != value))
				{
					this.OncidChanging(value);
					this.SendPropertyChanging();
					this._cid = value;
					this.SendPropertyChanged("cid");
					this.OncidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publishDate", DbType="Date NOT NULL")]
		public System.DateTime publishDate
		{
			get
			{
				return this._publishDate;
			}
			set
			{
				if ((this._publishDate != value))
				{
					this.OnpublishDateChanging(value);
					this.SendPropertyChanging();
					this._publishDate = value;
					this.SendPropertyChanged("publishDate");
					this.OnpublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_releaseDate", DbType="Date NOT NULL")]
		public System.DateTime releaseDate
		{
			get
			{
				return this._releaseDate;
			}
			set
			{
				if ((this._releaseDate != value))
				{
					this.OnreleaseDateChanging(value);
					this.SendPropertyChanging();
					this._releaseDate = value;
					this.SendPropertyChanged("releaseDate");
					this.OnreleaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageHref", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string pageHref
		{
			get
			{
				return this._pageHref;
			}
			set
			{
				if ((this._pageHref != value))
				{
					this.OnpageHrefChanging(value);
					this.SendPropertyChanging();
					this._pageHref = value;
					this.SendPropertyChanged("pageHref");
					this.OnpageHrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coverHref", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string coverHref
		{
			get
			{
				return this._coverHref;
			}
			set
			{
				if ((this._coverHref != value))
				{
					this.OncoverHrefChanging(value);
					this.SendPropertyChanging();
					this._coverHref = value;
					this.SendPropertyChanged("coverHref");
					this.OncoverHrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnail", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string thumbnail
		{
			get
			{
				return this._thumbnail;
			}
			set
			{
				if ((this._thumbnail != value))
				{
					this.OnthumbnailChanging(value);
					this.SendPropertyChanging();
					this._thumbnail = value;
					this.SendPropertyChanged("thumbnail");
					this.OnthumbnailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Movie_ActressMovie", Storage="_ActressMovie", ThisKey="id", OtherKey="movieId")]
		public EntitySet<ActressMovie> ActressMovie
		{
			get
			{
				return this._ActressMovie;
			}
			set
			{
				this._ActressMovie.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Label_Movie", Storage="_Label", ThisKey="label_id", OtherKey="id", IsForeignKey=true)]
		public Label Label
		{
			get
			{
				return this._Label.Entity;
			}
			set
			{
				Label previousValue = this._Label.Entity;
				if (((previousValue != value) 
							|| (this._Label.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Label.Entity = null;
						previousValue.Movie.Remove(this);
					}
					this._Label.Entity = value;
					if ((value != null))
					{
						value.Movie.Add(this);
						this._label_id = value.id;
					}
					else
					{
						this._label_id = default(int);
					}
					this.SendPropertyChanged("Label");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maker_Movie", Storage="_Maker", ThisKey="maker_id", OtherKey="id", IsForeignKey=true)]
		public Maker Maker
		{
			get
			{
				return this._Maker.Entity;
			}
			set
			{
				Maker previousValue = this._Maker.Entity;
				if (((previousValue != value) 
							|| (this._Maker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maker.Entity = null;
						previousValue.Movie.Remove(this);
					}
					this._Maker.Entity = value;
					if ((value != null))
					{
						value.Movie.Add(this);
						this._maker_id = value.id;
					}
					else
					{
						this._maker_id = default(int);
					}
					this.SendPropertyChanged("Maker");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Series_Movie", Storage="_Series", ThisKey="series_id", OtherKey="id", IsForeignKey=true)]
		public Series Series
		{
			get
			{
				return this._Series.Entity;
			}
			set
			{
				Series previousValue = this._Series.Entity;
				if (((previousValue != value) 
							|| (this._Series.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Series.Entity = null;
						previousValue.Movie.Remove(this);
					}
					this._Series.Entity = value;
					if ((value != null))
					{
						value.Movie.Add(this);
						this._series_id = value.id;
					}
					else
					{
						this._series_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Series");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActressMovie(ActressMovie entity)
		{
			this.SendPropertyChanging();
			entity.Movie = this;
		}
		
		private void detach_ActressMovie(ActressMovie entity)
		{
			this.SendPropertyChanging();
			entity.Movie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActressMovie")]
	public partial class ActressMovie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _actressId;
		
		private int _movieId;
		
		private int _actressOrder;
		
		private EntityRef<Actress> _Actress;
		
		private EntityRef<Movie> _Movie;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnactressIdChanging(int value);
    partial void OnactressIdChanged();
    partial void OnmovieIdChanging(int value);
    partial void OnmovieIdChanged();
    partial void OnactressOrderChanging(int value);
    partial void OnactressOrderChanged();
    #endregion
		
		public ActressMovie()
		{
			this._Actress = default(EntityRef<Actress>);
			this._Movie = default(EntityRef<Movie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actressId", DbType="Int NOT NULL")]
		public int actressId
		{
			get
			{
				return this._actressId;
			}
			set
			{
				if ((this._actressId != value))
				{
					if (this._Actress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactressIdChanging(value);
					this.SendPropertyChanging();
					this._actressId = value;
					this.SendPropertyChanged("actressId");
					this.OnactressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieId", DbType="Int NOT NULL")]
		public int movieId
		{
			get
			{
				return this._movieId;
			}
			set
			{
				if ((this._movieId != value))
				{
					if (this._Movie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmovieIdChanging(value);
					this.SendPropertyChanging();
					this._movieId = value;
					this.SendPropertyChanged("movieId");
					this.OnmovieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actressOrder", DbType="Int NOT NULL")]
		public int actressOrder
		{
			get
			{
				return this._actressOrder;
			}
			set
			{
				if ((this._actressOrder != value))
				{
					this.OnactressOrderChanging(value);
					this.SendPropertyChanging();
					this._actressOrder = value;
					this.SendPropertyChanged("actressOrder");
					this.OnactressOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actress_ActressMovie", Storage="_Actress", ThisKey="actressId", OtherKey="id", IsForeignKey=true)]
		public Actress Actress
		{
			get
			{
				return this._Actress.Entity;
			}
			set
			{
				Actress previousValue = this._Actress.Entity;
				if (((previousValue != value) 
							|| (this._Actress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Actress.Entity = null;
						previousValue.ActressMovie.Remove(this);
					}
					this._Actress.Entity = value;
					if ((value != null))
					{
						value.ActressMovie.Add(this);
						this._actressId = value.id;
					}
					else
					{
						this._actressId = default(int);
					}
					this.SendPropertyChanged("Actress");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Movie_ActressMovie", Storage="_Movie", ThisKey="movieId", OtherKey="id", IsForeignKey=true)]
		public Movie Movie
		{
			get
			{
				return this._Movie.Entity;
			}
			set
			{
				Movie previousValue = this._Movie.Entity;
				if (((previousValue != value) 
							|| (this._Movie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Movie.Entity = null;
						previousValue.ActressMovie.Remove(this);
					}
					this._Movie.Entity = value;
					if ((value != null))
					{
						value.ActressMovie.Add(this);
						this._movieId = value.id;
					}
					else
					{
						this._movieId = default(int);
					}
					this.SendPropertyChanged("Movie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Label")]
	public partial class Label : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<Movie> _Movie;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Label()
		{
			this._Movie = new EntitySet<Movie>(new Action<Movie>(this.attach_Movie), new Action<Movie>(this.detach_Movie));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Label_Movie", Storage="_Movie", ThisKey="id", OtherKey="label_id")]
		public EntitySet<Movie> Movie
		{
			get
			{
				return this._Movie;
			}
			set
			{
				this._Movie.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Movie(Movie entity)
		{
			this.SendPropertyChanging();
			entity.Label = this;
		}
		
		private void detach_Movie(Movie entity)
		{
			this.SendPropertyChanging();
			entity.Label = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Maker")]
	public partial class Maker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private string _url;
		
		private bool _enable;
		
		private EntitySet<Movie> _Movie;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnenableChanging(bool value);
    partial void OnenableChanged();
    #endregion
		
		public Maker()
		{
			this._Movie = new EntitySet<Movie>(new Action<Movie>(this.attach_Movie), new Action<Movie>(this.detach_Movie));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(2083) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enable", DbType="Bit NOT NULL")]
		public bool enable
		{
			get
			{
				return this._enable;
			}
			set
			{
				if ((this._enable != value))
				{
					this.OnenableChanging(value);
					this.SendPropertyChanging();
					this._enable = value;
					this.SendPropertyChanged("enable");
					this.OnenableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maker_Movie", Storage="_Movie", ThisKey="id", OtherKey="maker_id")]
		public EntitySet<Movie> Movie
		{
			get
			{
				return this._Movie;
			}
			set
			{
				this._Movie.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Movie(Movie entity)
		{
			this.SendPropertyChanging();
			entity.Maker = this;
		}
		
		private void detach_Movie(Movie entity)
		{
			this.SendPropertyChanging();
			entity.Maker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Series")]
	public partial class Series : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<Movie> _Movie;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Series()
		{
			this._Movie = new EntitySet<Movie>(new Action<Movie>(this.attach_Movie), new Action<Movie>(this.detach_Movie));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Series_Movie", Storage="_Movie", ThisKey="id", OtherKey="series_id")]
		public EntitySet<Movie> Movie
		{
			get
			{
				return this._Movie;
			}
			set
			{
				this._Movie.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Movie(Movie entity)
		{
			this.SendPropertyChanging();
			entity.Series = this;
		}
		
		private void detach_Movie(Movie entity)
		{
			this.SendPropertyChanging();
			entity.Series = null;
		}
	}
}
#pragma warning restore 1591
